{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","getNewId","Math","max","preparedTodos","App","useState","newTitle","setNewTitle","selectedUser","setSelectedUser","setTodos","isTitleError","setIsTitleError","isUserError","setUserError","Paper","Typography","variant","action","method","onSubmit","event","preventDefault","prev","newTodo","type","placeholder","value","onChange","target","disabled","Button","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3876ad2f.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { Button, Typography, Paper } from '@mui/material';\nimport { TodoList } from './components/TodoList';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getNewId(todos: Todo[]) {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n}\n\nexport const preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [newTitle, setNewTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [todos, setTodos] = useState([...preparedTodos]);\n\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserError, setUserError] = useState(false);\n\n  const reset = () => {\n    setNewTitle('');\n    setSelectedUser(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsTitleError(!newTitle);\n    setUserError(!selectedUser);\n\n    if (newTitle && selectedUser) {\n      setTodos(prev => {\n        const newTodo = {\n          id: getNewId(prev),\n          title: newTitle,\n          userId: selectedUser,\n          completed: false,\n          user: getUserById(+selectedUser),\n        };\n\n        return [...prev, newTodo];\n      });\n\n      reset();\n    }\n  };\n\n  const handleNewTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n    setIsTitleError(false);\n  };\n\n  const handleSelectedUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Paper className=\"container\">\n        <Typography variant=\"h3\">Add todo form</Typography>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          className=\"App__form\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"field\">\n            <label>\n              {'Title: '}\n              <input\n                type=\"text\"\n                className=\"titleInput\"\n                data-cy=\"titleInput\"\n                placeholder=\"Enter a title\"\n                value={newTitle}\n                onChange={handleNewTitle}\n              />\n            </label>\n            {isTitleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <label>\n              {'User: '}\n              <select\n                data-cy=\"userSelect\"\n                className=\"userSelect\"\n                value={selectedUser}\n                onChange={handleSelectedUser}\n              >\n                <option value=\"0\" disabled>Choose a user</option>\n\n                {usersFromServer.map((user) => (\n                  <option value={user.id} key={user.id}>\n                    {user.name}\n                  </option>\n                ))}\n              </select>\n            </label>\n            {isUserError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </div>\n\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"success\"\n            data-cy=\"submitButton\"\n          >\n            Add\n          </Button>\n        </form>\n\n        <TodoList todos={todos} />\n      </Paper>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}